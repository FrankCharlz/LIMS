var radius = 16;
var opacity = 0.5;

var color1 = {
    color: '#2980ff',
    fillColor: '#4584ff',
    fillOpacity: opacity,
    radius: radius,
    weight: 1
};

var color2 = {
    color: '#1417ff',
    fillColor: '#2f3bff',
    fillOpacity: opacity,
    radius: radius,
    weight: 1
};

var colors = [color1, color2];

const DEFAULT_ZOOM = 14;
const DEFAULT_CENTER = [-6.8512, 39.2544];

$(document).ready(function () {

    //try to retrieve map state from session if exists
    var last_zoom = window.sessionStorage.getItem('last_zoom');
    var last_lat = window.sessionStorage.getItem('last_lat');
    var last_lng = window.sessionStorage.getItem('last_lng');

    var last_center = DEFAULT_CENTER;
    if (last_lat != null && last_lng != null) last_center = [parseFloat(last_lat), parseFloat(last_lng)];
    if (last_zoom == null) last_zoom = 14;


    var map = L.map('map', { center: last_center, zoom: last_zoom});

    var custom_content_1 = document.getElementById('custom-popup-content').outerHTML;
    var custom_content_2 = document.getElementById('custom-popup-content-2').outerHTML;

    L.tileLayer(
        'http://{s}.tile.osm.org/{z}/{x}/{y}.png',
        {
            attribution: '&copy;<a href="http://osm.org/copyright">OpenStreetMap</a>',
            opacity: 0.5,
            maxZoom: 20,
            maxNativeZoom: 18 //to zoom beyond native
        }
    ).addTo(map);

    window.onbeforeunload = function(){
        // store map state to js session storage
        window.sessionStorage.setItem('last_zoom', map.getZoom());
        window.sessionStorage.setItem('last_lat', map.getCenter().lat);
        window.sessionStorage.setItem('last_lng', map.getCenter().lng);
        return null;
    };


    map.options.singleClickTimeout = 200;


    var popup = L.popup();

    function mapClicked(e) {

        var lat = e.latlng.lat;
        var lng = e.latlng.lng;

        var latlng = lat.toString()+'/'+lng.toString();

        var custom_content = custom_content_1.replace('__LATLANG', latlng);
        console.log(custom_content);

        var content = "<h4>Latitude: "+lat+'<br>Longitude: '+lng +"</h4>"+ custom_content;

        popup
            .setLatLng(e.latlng)
            .setContent(content)
            .openOn(map);
    }

    map.on('singleclick', mapClicked);

    map.on('zoomend', function() {

    });

    var showSavedPlots = function () {

        $.get( "/plots/all", function(data) {
            console.log('got plots:'+ data.length);

            for (var i = 0; i<data.length; i++) {

                var boundaries = data[i]['boundaries'];

                //console.log(data[i].latitude+ " : " + data[i].longitude);
                //console.log(boundaries);

                boundaries = JSON.parse(boundaries);
                //console.log(boundaries);
                var color_index = parseInt(data[i]['status_id']) % colors.length; //todo: dejangalize here

                console.log(data[i].id);
                var plot = L.polygon(boundaries, colors[color_index]).addTo(map);

                var popup = L.popup(); //init popup

                var custom_content = custom_content_2
                    .replace('__PLOT_ID', data[i].id)
                    .replace('__PLOT_ID', data[i].id);

                custom_content =  "<h4>Latitude: "+data[i].latitude+'<br>Longitude: '+data[i].longitude+"</h4>"+ custom_content;

                popup.setContent(custom_content);

                plot.bindPopup(popup);

                if (i == 50) break;
            }
        });

    };

    //show saved plots with different colors for their status...
    showSavedPlots();

});


/***
 *
 var shoelace = function (points) {
    //points is n array of coordinates as [[x1,y1],[x2,y2],...]
    var wrap = points[0];
    points.push(wrap);

    //console.log(points);

    var area = 0;
    for (var i = 0; i < points.length - 1; i++) {
        area += (points[i][0] * points[i+1][1]);
    }

    for (i = 0; i < points.length - 1; i++) {
        area -= (points[i][1] * points[i+1][0]);
    }

    return Math.abs(area/2);
};

 var polygons = [[[-6.832375936956543, 39.28199172019959], [-6.832375936956543, 39.282237620199595], [-6.832239036956543, 39.282237620199595], [-6.832239036956543, 39.28199172019959]], [[-6.832375936956543, 39.282237620199595], [-6.832375936956543, 39.2824835201996], [-6.832239036956543, 39.2824835201996], [-6.832239036956543, 39.282237620199595]], [[-6.832375936956543, 39.2824835201996], [-6.832375936956543, 39.2827294201996], [-6.832239036956543, 39.2827294201996], [-6.832239036956543, 39.2824835201996]], [[-6.832375936956543, 39.2827294201996], [-6.832375936956543, 39.282975320199604], [-6.832239036956543, 39.282975320199604], [-6.832239036956543, 39.2827294201996]], [[-6.832375936956543, 39.282975320199604], [-6.832375936956543, 39.28322122019961], [-6.832239036956543, 39.28322122019961], [-6.832239036956543, 39.282975320199604]], [[-6.832375936956543, 39.28322122019961], [-6.832375936956543, 39.28346712019961], [-6.832239036956543, 39.28346712019961], [-6.832239036956543, 39.28322122019961]], [[-6.832375936956543, 39.28346712019961], [-6.832375936956543, 39.28371302019961], [-6.832239036956543, 39.28371302019961], [-6.832239036956543, 39.28346712019961]], [[-6.832375936956543, 39.28371302019961], [-6.832375936956543, 39.283958920199616], [-6.832239036956543, 39.283958920199616], [-6.832239036956543, 39.28371302019961]], [[-6.832239036956543, 39.28199172019959], [-6.832239036956543, 39.282237620199595], [-6.832102136956543, 39.282237620199595], [-6.832102136956543, 39.28199172019959]], [[-6.832239036956543, 39.282237620199595], [-6.832239036956543, 39.2824835201996], [-6.832102136956543, 39.2824835201996], [-6.832102136956543, 39.282237620199595]], [[-6.832239036956543, 39.2824835201996], [-6.832239036956543, 39.2827294201996], [-6.832102136956543, 39.2827294201996], [-6.832102136956543, 39.2824835201996]], [[-6.832239036956543, 39.2827294201996], [-6.832239036956543, 39.282975320199604], [-6.832102136956543, 39.282975320199604], [-6.832102136956543, 39.2827294201996]], [[-6.832239036956543, 39.282975320199604], [-6.832239036956543, 39.28322122019961], [-6.832102136956543, 39.28322122019961], [-6.832102136956543, 39.282975320199604]], [[-6.832239036956543, 39.28322122019961], [-6.832239036956543, 39.28346712019961], [-6.832102136956543, 39.28346712019961], [-6.832102136956543, 39.28322122019961]], [[-6.832239036956543, 39.28346712019961], [-6.832239036956543, 39.28371302019961], [-6.832102136956543, 39.28371302019961], [-6.832102136956543, 39.28346712019961]], [[-6.832239036956543, 39.28371302019961], [-6.832239036956543, 39.283958920199616], [-6.832102136956543, 39.283958920199616], [-6.832102136956543, 39.28371302019961]], [[-6.832102136956543, 39.28199172019959], [-6.832102136956543, 39.282237620199595], [-6.831965236956543, 39.282237620199595], [-6.831965236956543, 39.28199172019959]], [[-6.832102136956543, 39.282237620199595], [-6.832102136956543, 39.2824835201996], [-6.831965236956543, 39.2824835201996], [-6.831965236956543, 39.282237620199595]], [[-6.832102136956543, 39.2824835201996], [-6.832102136956543, 39.2827294201996], [-6.831965236956543, 39.2827294201996], [-6.831965236956543, 39.2824835201996]], [[-6.832102136956543, 39.2827294201996], [-6.832102136956543, 39.282975320199604], [-6.831965236956543, 39.282975320199604], [-6.831965236956543, 39.2827294201996]], [[-6.832102136956543, 39.282975320199604], [-6.832102136956543, 39.28322122019961], [-6.831965236956543, 39.28322122019961], [-6.831965236956543, 39.282975320199604]], [[-6.832102136956543, 39.28322122019961], [-6.832102136956543, 39.28346712019961], [-6.831965236956543, 39.28346712019961], [-6.831965236956543, 39.28322122019961]], [[-6.832102136956543, 39.28346712019961], [-6.832102136956543, 39.28371302019961], [-6.831965236956543, 39.28371302019961], [-6.831965236956543, 39.28346712019961]], [[-6.832102136956543, 39.28371302019961], [-6.832102136956543, 39.283958920199616], [-6.831965236956543, 39.283958920199616], [-6.831965236956543, 39.28371302019961]], [[-6.831965236956543, 39.28199172019959], [-6.831965236956543, 39.282237620199595], [-6.8318283369565425, 39.282237620199595], [-6.8318283369565425, 39.28199172019959]], [[-6.831965236956543, 39.282237620199595], [-6.831965236956543, 39.2824835201996], [-6.8318283369565425, 39.2824835201996], [-6.8318283369565425, 39.282237620199595]], [[-6.831965236956543, 39.2824835201996], [-6.831965236956543, 39.2827294201996], [-6.8318283369565425, 39.2827294201996], [-6.8318283369565425, 39.2824835201996]], [[-6.831965236956543, 39.2827294201996], [-6.831965236956543, 39.282975320199604], [-6.8318283369565425, 39.282975320199604], [-6.8318283369565425, 39.2827294201996]], [[-6.831965236956543, 39.282975320199604], [-6.831965236956543, 39.28322122019961], [-6.8318283369565425, 39.28322122019961], [-6.8318283369565425, 39.282975320199604]], [[-6.831965236956543, 39.28322122019961], [-6.831965236956543, 39.28346712019961], [-6.8318283369565425, 39.28346712019961], [-6.8318283369565425, 39.28322122019961]], [[-6.831965236956543, 39.28346712019961], [-6.831965236956543, 39.28371302019961], [-6.8318283369565425, 39.28371302019961], [-6.8318283369565425, 39.28346712019961]], [[-6.831965236956543, 39.28371302019961], [-6.831965236956543, 39.283958920199616], [-6.8318283369565425, 39.283958920199616], [-6.8318283369565425, 39.28371302019961]]];

 */
